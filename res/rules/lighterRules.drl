import main.event.ClickEvent
import main.event.LightUpEvent
import main.event.LightDownEvent
import main.event.ReachedBottom
import main.event.ReachedBottomEvent

declare ClickEvent
@role(event)
end

declare ReachedBottom
@role(event)
end

declare ReachedBottomEvent
@role(event)
end

declare LightUpEvent
@role(event)
@expires(1s)
end

declare LightDownEvent
@role(event)
@expires(1s)
end

global main.Lighter lighter;

rule "fast enough"
when
    $click1:ClickEvent() from entry-point startEntryPoint
    $click2:ClickEvent(!$click2.isProcessed() && !$click1.isProcessed(),
                        $click1 != $click2,
                        this after [ 0s,  1s ] $click1 )  from entry-point startEntryPoint
then
    $click1.setProcessed(true);
    insert(new LightUpEvent());
end

rule "light up"
    when
        LightUpEvent()
    then
        lighter.up();
    end

rule "start dimming away" timer(1s)
    when
        not(event:LightUpEvent())
    then
        System.out.println("too slow!");
        insert(new LightDownEvent());
    end

rule "light down" timer (1s)
    when
        LightDownEvent()
        not (lightUpEvent:LightUpEvent())
        not (reachedBottomEvent:ReachedBottomEvent())
    then
        lighter.down();
        insert(new LightDownEvent());
    end

rule "bottom"
    when
        ReachedBottom() from entry-point startEntryPoint
    then
        System.out.println("bottom!");
        insert(new ReachedBottomEvent());
    end

rule "prevent down"
    when
        $downEvent:LightDownEvent()
        $bottomEvent:ReachedBottomEvent()
    then
        retract($downEvent);
        retract($bottomEvent);
        System.out.println("stopped going down!");
    end